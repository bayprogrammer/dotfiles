set -g mode-keys emacs

set -g prefix C-t
bind-key C-t send-prefix

set -g escape-time 0
set -g mouse on

set -g history-limit 10000

set -g status-justify centre
set -g -a pane-border-style fg=default,bg=default
set -g -a pane-active-border-style fg=default,bg=default
set -g status-style bg=default,fg=default
set -g mode-style bg=default,reverse,fg=default
set -g message-style bg=default,fg=default
set -g status-left '[#S] '
set -g status-right ' [%H:%M]'
set -g status-left-length 25
set -g window-status-current-style bg=default,bold,fg=default

bind-key R source-file ~/.tmux.conf
bind-key S set status

bind-key k select-pane -U
bind-key j select-pane -D
bind-key h select-pane -L
bind-key l select-pane -R

bind-key -r M-k resize-pane -U 5
bind-key -r M-j resize-pane -D 5
bind-key -r M-h resize-pane -L 5
bind-key -r M-l resize-pane -R 5

bind-key -r M-Up resize-pane -U 5
bind-key -r M-Down resize-pane -D 5
bind-key -r M-Left resize-pane -L 5
bind-key -r M-Right resize-pane -R 5

bind-key -r C-k resize-pane -U
bind-key -r C-j resize-pane -D
bind-key -r C-h resize-pane -L
bind-key -r C-l resize-pane -R

bind-key -r C-Up resize-pane -U
bind-key -r C-Down resize-pane -D
bind-key -r C-Left resize-pane -L
bind-key -r C-Right resize-pane -R

# -----------------------------------------------------------------------------

set -g default-terminal tmux-256color

# https://wiki.archlinux.org/index.php/Tmux#Start_a_non-login_shell
set -g default-command "${SHELL}"

# https://www.reddit.com/r/tmux/comments/2xgrf8/garbage_characters_printed_to_screen_after_a/
set -g set-clipboard off

set -g xterm-keys on
set -g -a terminal-overrides ",xterm-256color:Tc"
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
#set -g status off

# Smart pane switching with awareness of Emacs & Vim splits.
# from: https://gist.github.com/nathanlippi/5923326
is_editor="tmux display-message -p '#{pane_current_command}' | grep -iq '\\(emacs\\|vim\\)'"
bind-key -n M-k  if-shell "$is_editor" "send-keys M-k"  "select-pane -U"
bind-key -n M-j  if-shell "$is_editor" "send-keys M-j"  "select-pane -D"
bind-key -n M-h  if-shell "$is_editor" "send-keys M-h"  "select-pane -L"
bind-key -n M-l  if-shell "$is_editor" "send-keys M-l"  "select-pane -R"

#bind-key -n M-Up  if-shell "$is_editor" "send-keys M-k"  "select-pane -U"
#bind-key -n M-Down  if-shell "$is_editor" "send-keys M-j"  "select-pane -D"
#bind-key -n M-Left  if-shell "$is_editor" "send-keys M-h"  "select-pane -L"
#bind-key -n M-Right  if-shell "$is_editor" "send-keys M-l"  "select-pane -R"

#bind-key -n S-Up  if-shell "$is_editor" "send-keys S-Up"  "select-pane -U"
#bind-key -n S-Down  if-shell "$is_editor" "send-keys S-Down"  "select-pane -D"
#bind-key -n S-Left  if-shell "$is_editor" "send-keys S-Left"  "select-pane -L"
#bind-key -n S-Right  if-shell "$is_editor" "send-keys S-Right"  "select-pane -R"

bind-key -n M-o select-pane -t +1
bind-key -n M-n next-window
bind-key -n M-p previous-window
bind-key -n M-N swap-window -d -t +1
bind-key -n M-P swap-window -d -t -1

unbind-key -Tcopy-mode C-w
bind-key   -Tcopy-mode C-w send -X copy-pipe-and-cancel clipc
unbind-key -Tcopy-mode M-w
bind-key   -Tcopy-mode M-w send -X copy-pipe-and-cancel clipc
unbind-key -Tcopy-mode C-k

unbind-key -Tcopy-mode-vi v
bind-key   -Tcopy-mode-vi v send -X begin-selection
unbind-key -Tcopy-mode-vi V
bind-key   -Tcopy-mode-vi V send -X begin-selection
unbind-key -Tcopy-mode-vi y
bind-key   -Tcopy-mode-vi y send -X copy-pipe-and-cancel clipc
unbind-key -Tcopy-mode-vi d
bind-key   -Tcopy-mode-vi d send -X copy-pipe-and-cancel clipc
unbind-key -Tcopy-mode-vi x
bind-key   -Tcopy-mode-vi x send -X copy-pipe-and-cancel clipc
unbind-key -Tcopy-mode-vi C-j
bind-key   -Tcopy-mode-vi C-j send -X copy-pipe-and-cancel clipc
unbind-key -Tcopy-mode-vi Enter
bind-key   -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel clipc

unbind-key ]
bind-key ] run "clipp | tmux load-buffer - && tmux paste-buffer"
